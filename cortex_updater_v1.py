# cortex_updater.py
# –í–µ—Ä—Å–∏—è: 1.0
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π "Project_Exocortex"

import gspread
from google.oauth2.service_account import Credentials
import json
import logging
from datetime import datetime

# --- –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ---
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
GSHEETS_CREDS = 'credentials.json'
# –í–ê–ñ–ù–û: –£–∫–∞–∂–∏—Ç–µ URL –≤–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ "Project_Exocortex"
EXOCORTEX_URL = "https://docs.google.com/spreadsheets/d/1lQbJvGKSuVjC09ui6v6Gc0npnO7HzuQzAefQBMWqTxU/"
LOG_FILE_PATH = 'session_log.txt'

def get_gsheets_client():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Google Sheets –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∏–µ–Ω—Ç–∞."""
    try:
        creds = Credentials.from_service_account_file(GSHEETS_CREDS, scopes=['https://www.googleapis.com/auth/spreadsheets'])
        client = gspread.authorize(creds)
        return client
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Google: {e}")
        return None

def read_session_log(file_path: str) -> str:
    """–ß–∏—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –ª–æ–≥–æ–º —Å–µ—Å—Å–∏–∏."""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return f.read()
    except FileNotFoundError:
        logging.error(f"–§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return ""

def get_structured_data_from_ai(text: str) -> dict:
    """
    (–ó–ê–ì–õ–£–®–ö–ê) –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç AI –∏ –ø–æ–ª—É—á–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON.
    –ü–æ–∫–∞ –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
    """
    logging.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞ AI –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API LLM
    # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –±—É–¥–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–∏–º:
    # "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∏–∞–ª–æ–≥. –í—ã–¥–µ–ª–∏: 1. –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã. 2. –ü—Ä–∏–Ω—è—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è. 3. –ù–æ–≤—ã–µ –∏–¥–µ–∏. 4. –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏. –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON."
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π JSON –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    mock_response = {
        "themes": "–û—Ç–ª–∞–¥–∫–∞ –î–∞—à–±–æ—Ä–¥–∞, –ö–æ–Ω—Ü–µ–ø—Ü–∏—è '–≠–∫–∑–æ–∫–æ—Ä—Ç–µ–∫—Å–∞'",
        "decisions": [
            {"decision": "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–∑–¥–∞–Ω–∏—é '–≠–∫–∑–æ–∫–æ—Ä—Ç–µ–∫—Å–∞'", "reason": "–ü–æ—Ç–µ—Ä—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –æ—à–∏–±–∫–∏ –≤ GSheets"}
        ],
        "ideas": [
            {"idea": "AI-–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è Todoist", "impact": 9, "effort": 6, "status": "–ö —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é"}
        ],
        "knowledge": [
            {"category": "Google Sheets", "lesson": "–§—É–Ω–∫—Ü–∏—è MAP –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å QUERY –≤–Ω—É—Ç—Ä–∏ LAMBDA."}
        ]
    }
    logging.info("–ü–æ–ª—É—á–µ–Ω —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç AI.")
    return mock_response

def update_exocortex(data: dict, gsheet_client):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ª–∏—Å—Ç—ã –≤ Google-—Ç–∞–±–ª–∏—Ü–µ 'Project_Exocortex'."""
    try:
        spreadsheet = gsheet_client.open_by_url(EXOCORTEX_URL)
        today_str = datetime.now().strftime("%Y-%m-%d")

        # –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏—Å—Ç Dailies
        dailies_sheet = spreadsheet.worksheet('Dailies')
        # –ó–¥–µ—Å—å –º—ã –±—ã –¥–æ–±–∞–≤–∏–ª–∏ –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞, –Ω–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –¥–æ–±–∞–≤–∏–º —Ç–æ–ª—å–∫–æ —Ç–µ–º—ã
        dailies_sheet.append_row([today_str, data.get("themes", "")])
        logging.info("–õ–∏—Å—Ç 'Dailies' –æ–±–Ω–æ–≤–ª–µ–Ω.")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è... (—Ä–µ–∞–ª–∏–∑—É–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö)

        return True
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞."""
    logging.info("--- üß† –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≠–∫–∑–æ–∫–æ—Ä—Ç–µ–∫—Å–∞ üß† ---")
    
    session_text = read_session_log(LOG_FILE_PATH)
    if not session_text:
        return

    structured_data = get_structured_data_from_ai(session_text)
    
    gs_client = get_gsheets_client()
    if not gs_client:
        return
        
    update_exocortex(structured_data, gs_client)
    
    logging.info("--- ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≠–∫–∑–æ–∫–æ—Ä—Ç–µ–∫—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ---")

if __name__ == "__main__":
    main()