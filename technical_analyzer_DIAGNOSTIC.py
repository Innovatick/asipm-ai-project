# technical_analyzer_DIAGNOSTIC.py
# –¶–µ–ª—å: –í—ã–≤–µ—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ Google Sheets.

import gspread
from google.oauth2.service_account import Credentials
import pandas as pd
from io import StringIO
from typing import Optional

print("--- üî¨ ASIPM-AI: –ó–ê–ü–£–°–ö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê üî¨ ---")

def get_worksheet(sheet_name: str) -> Optional[gspread.Worksheet]:
    try:
        creds = Credentials.from_service_account_file('credentials.json', scopes=['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive.file'])
        client = gspread.authorize(creds)
        spreadsheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1qBYS_DhGNsTo-Dnph3g_H27aHQOoY0EOcmCIKarb7Zc/")
        return spreadsheet.worksheet(sheet_name)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—Å—Ç—É '{sheet_name}': {e}")
        return None

# --- –≠–¢–ê–ü 1: –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ---
print("\n--- –≠–¢–ê–ü 1: –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ---")
history_sheet = get_worksheet('History_OHLCV')
if not history_sheet:
    raise SystemExit("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–∏—Å—Ç History_OHLCV. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ.")

history_records = history_sheet.get_all_records()
print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(history_records)} –∑–∞–ø–∏—Å–µ–π –∏–∑ Google Sheets.")
print("–ü–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏ –≤ —Å—ã—Ä–æ–º –≤–∏–¥–µ (–∏–∑ gspread):")
print(history_records[:3])

# --- –≠–¢–ê–ü 2: –°–û–ó–î–ê–ù–ò–ï –ü–ï–†–í–ò–ß–ù–û–ì–û DATAFRAME ---
print("\n--- –≠–¢–ê–ü 2: –°–û–ó–î–ê–ù–ò–ï –ü–ï–†–í–ò–ß–ù–û–ì–û DATAFRAME ---")
history_df = pd.DataFrame(history_records)
print("‚úÖ –ü–µ—Ä–≤–∏—á–Ω—ã–π DataFrame —Å–æ–∑–¥–∞–Ω.")
print("–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö (dtypes) –°–†–ê–ó–£ –ü–û–°–õ–ï —Å–æ–∑–¥–∞–Ω–∏—è DataFrame:")
print(history_df.dtypes)
print("\n–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ DataFrame (history_df.head()):")
print(history_df.head().to_markdown())

# --- –≠–¢–ê–ü 3: –ü–û–ü–´–¢–ö–ê –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–Ø –í –ß–ò–°–õ–ê ---
print("\n--- –≠–¢–ê–ü 3: –ü–û–ü–´–¢–ö–ê –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–Ø –í –ß–ò–°–õ–ê ---")
cols_to_process = ['Open', 'High', 'Low', 'Close', 'Volume']
for col in cols_to_process:
    if col in history_df.columns:
        print(f"  - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Ç–æ–ª–±–µ—Ü '{col}'...")
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ None, —á—Ç–æ–±—ã to_numeric –∏—Ö –ø–æ–Ω—è–ª
        history_df[col] = history_df[col].replace('', None)
        history_df[col] = pd.to_numeric(history_df[col], errors='coerce')
    else:
        print(f"  - ‚ö†Ô∏è –°—Ç–æ–ª–±–µ—Ü '{col}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DataFrame.")

print("‚úÖ –¶–∏–∫–ª –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω.")
print("\n–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö (dtypes) –ü–û–°–õ–ï –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:")
print(history_df.dtypes)
print("\n–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ DataFrame –ü–û–°–õ–ï –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è (history_df.head()):")
print(history_df.head().to_markdown())

# --- –≠–¢–ê–ü 4: –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –î–õ–Ø –û–î–ù–û–ì–û –¢–ò–ö–ï–†–ê ---
print("\n--- –≠–¢–ê–ü 4: –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –î–õ–Ø –û–î–ù–û–ì–û –¢–ò–ö–ï–†–ê (BZ=F) ---")
ticker_to_check = "BZ=F"
ticker_history = history_df[history_df['Ticker'] == ticker_to_check].copy()

print(f"‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ {len(ticker_history)} —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–∏–∫–µ—Ä–∞ {ticker_to_check}.")
print(f"–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö (dtypes) –≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–º DataFrame –¥–ª—è {ticker_to_check}:")
buffer = StringIO()
ticker_history.info(buf=buffer)
info_str = buffer.getvalue()
print(info_str)

print(f"\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ –¥–ª—è {ticker_to_check} (–ø–µ—Ä–µ–¥ —Ä–∞—Å—á–µ—Ç–∞–º–∏):")
print(ticker_history.tail().to_markdown())

print("\n--- üî¨ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê üî¨ ---")