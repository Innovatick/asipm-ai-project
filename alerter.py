# alerter.py
# –í–µ—Ä—Å–∏—è: 1.9.2 (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)

import gspread
from google.oauth2.service_account import Credentials
import pandas as pd
import requests
import logging
from datetime import datetime

# –ò–ó–ú–ï–ù–ï–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –º–æ–¥—É–ª—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler("alerter.log", encoding='utf-8'),
        logging.StreamHandler()
    ]
)

# ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –º–æ–¥—É–ª—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
# =============================================================================
# --- –ë–õ–û–ö 1: –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï ---
# =============================================================================
CREDS_FILE = 'credentials.json'
SPREADSHEET_URL = "https://docs.google.com/spreadsheets/d/1qBYS_DhGNsTo-Dnph3g_H27aHQOoY0EOcmCIKarb7Zc/"
SCOPE = ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive.file']

def get_worksheet(sheet_name):
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Google Sheets –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ª–∏—Å—Ç–∞."""
    try:
        creds = Credentials.from_service_account_file(CREDS_FILE, scopes=SCOPE)
        client = gspread.authorize(creds)
        spreadsheet = client.open_by_url(SPREADSHEET_URL)
        return spreadsheet.worksheet(sheet_name)
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—Å—Ç—É '{sheet_name}': {e}")
        return None

# =============================================================================
# --- –ë–õ–û–ö 2: –õ–û–ì–ò–ö–ê –û–¢–ü–†–ê–í–ö–ò –ê–õ–ï–†–¢–û–í ---
# =============================================================================
def escape_markdown(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã MarkdownV2 –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram."""
    escape_chars = r'_*[]()~`>#+-=|{}.!'
    return ''.join(f'\\{char}' if char in escape_chars else char for char in text)

def send_telegram_alert(bot_token, chat_id, message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞."""
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    params = {'chat_id': chat_id, 'text': message, 'parse_mode': 'MarkdownV2'}
    try:
        response = requests.post(url, json=params, timeout=10)
        response.raise_for_status()
        logging.info(f"    >> ‚úÖ –ê–ª–µ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
        return True
    except requests.exceptions.RequestException as e:
        logging.error(f"    >> ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ –≤ Telegram: {e}")
        if e.response:
            logging.error(f"    >> ‚ùå –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {e.response.text}")
        return False

# =============================================================================
# --- –ë–õ–û–ö 3: –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ê–õ–ï–†–¢–ï–†–ê ---
# =============================================================================
def main_alerter(interval: int = 24):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–ª–µ—Ä—Ç–µ—Ä–∞. –ò—â–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.
    """
    timeframe_map = {24: 'D1', 60: 'H1', 30: 'm30', 10: 'm10', 1: 'm1'}
    timeframe_label = timeframe_map.get(interval, f'm{interval}')
    
    logging.info("\n" + "="*50)
    logging.info(f"--- üîî –ê–°–£–ü –ò–ò: –°–∏—Å—Ç–µ–º–∞ –û–ø–æ–≤–µ—â–µ–Ω–∏–π v1.9.2 (–¢–∞–π–º—Ñ—Ä–µ–π–º: {timeframe_label}) üîî ---")
    logging.info("="*50)
    
    config_sheet = get_worksheet('Config')
    analysis_sheet = get_worksheet('Analysis')
    if not all([config_sheet, analysis_sheet]): 
        logging.critical("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –æ–¥–Ω–æ–º—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ª–∏—Å—Ç–∞–º Google. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        return

    logging.info("üîÑ –ß–∏—Ç–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...")
    configs_raw = config_sheet.get_all_records()
    configs = {item['Parameter']: item['Value'] for item in configs_raw}
    analysis_data = analysis_sheet.get_all_records()
    
    if len(analysis_data) < 2:
        logging.info("‚ÑπÔ∏è –õ–∏—Å—Ç 'Analysis' –ø—É—Å—Ç. –ü—Ä–æ–ø—É—Å–∫–∞—é.")
        return

    analysis_df = pd.DataFrame(analysis_data[1:], columns=analysis_data[0])
    
    analysis_df_filtered = analysis_df[analysis_df['Timeframe'] == timeframe_label].copy()
    if analysis_df_filtered.empty:
        logging.info(f"‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ {timeframe_label}. –ü—Ä–æ–ø—É—Å–∫–∞—é.")
        return

    bot_token = configs.get('TELEGRAM_BOT_TOKEN')
    chat_id = configs.get('TELEGRAM_CHAT_ID')
    
    logging.info(f"‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è—é —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞ {timeframe_label}...")
    
    alerts_to_send = analysis_df_filtered[
        (analysis_df_filtered['State'] == 'Oversold') &
        (analysis_df_filtered['Recommendation'] != 'Alert Sent')
    ]
    
    if alerts_to_send.empty:
        logging.info("‚úÖ –ù–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ 'Oversold' –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        logging.info(f"–ù–∞–π–¥–µ–Ω–æ {len(alerts_to_send)} –Ω–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ 'Oversold'. –û—Ç–ø—Ä–∞–≤–∫–∞...")
        for index, alert_row in alerts_to_send.iterrows():
            ticker = alert_row['Ticker']
            rsi_value = float(str(alert_row['RSI_14']).replace(',', '.'))
            
            safe_ticker = escape_markdown(ticker)
            now_time_str = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            
            message = (
                f"üö® *–°–ò–ì–ù–ê–õ: –ü–ï–†–ï–ü–†–û–î–ê–ù–ù–û–°–¢–¨ ({timeframe_label})*\n\n"
                f"*{safe_ticker}* –≤–æ—à–µ–ª –≤ –∑–æ–Ω—É –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏\n\n"
                f"*–¢–µ–∫—É—â–∏–π RSI\\(14\\):* `{rsi_value:.2f}`\n"
                f"*–í—Ä–µ–º—è —Å–∏–≥–Ω–∞–ª–∞:* `{now_time_str}`\n\n"
                f"*–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:* –ò—Å–∫–∞—Ç—å —Ç–æ—á–∫—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ {timeframe_label}\\."
            )

            if send_telegram_alert(bot_token, chat_id, message):
                logging.info(f"  - –ê–ª–µ—Ä—Ç –ø–æ {ticker} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏—Ç —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ.")

    logging.info("--- üèÅ –†–ê–ë–û–¢–ê –°–ò–°–¢–ï–ú–´ –û–ü–û–í–ï–©–ï–ù–ò–ô –ó–ê–í–ï–†–®–ï–ù–ê üèÅ ---")

if __name__ == "__main__":
    main_alerter(interval=24)